cmake_minimum_required(VERSION 2.8.12)

project(DBEXPORT)


ADD_DEFINITIONS("/W3 /D_CRT_SECURE_NO_WARNINGS /wd4005 /wd4996 /wd4819 /wd4305 /wd4290 /nologo")

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}")

#FIND Qt4
FIND_PACKAGE(Qt4 REQUIRED)
SET(QT_USE_QTMAIN TRUE)
SET(QT_USE_QTSQL TRUE)
SET(QT_USE_QTNETWORK TRUE)
SET(QT_USE_QTWEBKIT TRUE)
SET(QT_USE_QAXOBJECT TRUE)
INCLUDE(${QT_USE_FILE})


#QAX
#IF (CMAKE_BUILD_TYPE MATCHES Release)
  SET(QAX D:/qt-everywhere-opensource-src-4.8.6/lib/QAxContainer.lib)
#ENDIF (CMAKE_BUILD_TYPE MATCHES Release)


SET(PLUGIN_SRCS
  dbexport.cpp
  OptDlg.cpp
)

# Files which should be processed by Qts moc
SET(PLUGIN_MOC_SRCS
  dbexport.h
  OptDlg.h
)

# Qt Designer files which should be processed by Qts uic
SET(PLUGIN_UI_FORMS
  db_export.ui
  OptDlg.ui
)


QT4_WRAP_UI(uic_FILES ${PLUGIN_UI_FORMS})
QT4_WRAP_CPP(moc_FILES ${PLUGIN_MOC_SRCS})

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

ADD_EXECUTABLE(DBEXPORT main.cpp ${PLUGIN_SRCS} ${moc_FILES} ${uic_FILES})
TARGET_LINK_LIBRARIES(DBEXPORT ${QT_LIBRARIES} ${QAX})